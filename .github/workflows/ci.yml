name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "renovate.json"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install dependencies
        run: npm ci

      - name: Run typecheck
        run: npm run typecheck

      - name: Run lint
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Start PostgreSQL services
        run: docker compose up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL services to be ready..."
          timeout 60s bash -c 'until docker compose exec -T postgres-main pg_isready -U testuser -d testdb; do sleep 2; done'
          timeout 60s bash -c 'until docker compose exec -T postgres-analytics pg_isready -U testuser -d analyticsdb; do sleep 2; done'
          echo "PostgreSQL services are ready!"

      - name: Run E2E tests
        run: npm run e2e

      - name: Stop PostgreSQL services
        if: always()
        run: docker compose down

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Setup npm authentication
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        run: gh release create ${{ github.ref_name }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
